{"ast":null,"code":"import { Observable, of } from 'rxjs';\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SearchService = /*#__PURE__*/(() => {\n  class SearchService {\n    constructor(httpClient) {\n      this.httpClient = httpClient; //public baseUrl = \"https://api.github.com/search/repositories\";\n\n      this.baseUrl = \"http://localhost:6521/api/marvel\";\n    }\n\n    searchCharacters(term) {\n      if (term === \"\") {\n        console.log(\"Not defined\");\n        return of(null); //return empty();\n      } else {\n        let params = {\n          nameStartsWith: term\n        };\n        return this.httpClient.get(this.baseUrl, {\n          params\n        }).pipe(map(response => {\n          console.log(response);\n          return this.searchResults = response;\n        }));\n      }\n    }\n\n  }\n\n  SearchService.ɵfac = function SearchService_Factory(t) {\n    return new (t || SearchService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  SearchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SearchService,\n    factory: SearchService.ɵfac,\n    providedIn: 'root'\n  });\n  return SearchService;\n})();","map":null,"metadata":{},"sourceType":"module"}